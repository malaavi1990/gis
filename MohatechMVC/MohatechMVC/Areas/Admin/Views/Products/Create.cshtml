@using System.Drawing.Imaging
@using MohatechDomain
@model MohatechDomain.Product

@{
    ViewBag.Title = "افزودن محصول";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4>افزودن محصول</h4>
        <hr />
        @if (ViewBag.Category == true)
        {
            <div class="alert alert-danger">
                <p>لطفا دسته بندی محصول را انتخاب کنید</p>
            </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-8">
                <div class="form-group row">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Visit, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Visit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Visit, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Sort, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-3">
                        کلمات کلیدی
                    </div>
                    <div class="col-md-9">
                        <input type="text" name="tags" class="form-control  " placeholder="کلمات کلیدی را با , جدا کنید" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="تایید" class="create-btn" />
                        @Html.ActionLink("بازگشت", "Index", null, new { @class = "cancel-btn" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group row">
                    @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <img id="imgPreviewProduct" src="~/Content/Image/Product/Thumbnail/user123456789.png" class="img-thumbnail" />
                        <input type="file" name="imageProduct" id="imageProduct" />
                        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-4">
                        <p>دسته بندی </p>
                    </div>
                    <div class="col-md-8">
                        @{
                            List<Category> categories = ViewBag.Categories;
                            <ul>
                                @foreach (var category in categories.Where(c => c.ParentId == 0))
                                {
                                    <li>
                                        <input type="checkbox" name="selectedCategory" value="@category.CategoryId" /><span>@category.Title</span>
                                        @if (categories.Any(c => c.ParentId == category.CategoryId))
                                        {
                                            <ul class="mr-3">
                                                @foreach (var subCategory in categories.Where(c => c.ParentId == category.CategoryId))
                                                {
                                                    <li>
                                                        <input type="checkbox" name="selectedCategory" value="@subCategory.CategoryId" /><span>@subCategory.Title</span>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </div>
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgPreviewProduct').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imageProduct").change(function () {
            readURL(this);
        });
    </script>
    <script src="/ckeditor/ckeditor.js"></script>
    <script src="/ckeditor/adapters/jquery.js"></script>
    <script>
        $(function () {
            $('#Text').ckeditor();
        });
    </script>
}
